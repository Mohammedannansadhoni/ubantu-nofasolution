<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{{event.eventName}} - Registration</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
    }

    .page-container {
      width: 100%;
      max-width: 500px;
      background: #ffffff;
      border-radius: 20px;
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
      overflow: hidden;
      position: relative;
    }

    .registration-header {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 30px 20px;
      text-align: center;
      position: relative;
    }

    .registration-header::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="1"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
      opacity: 0.3;
    }

    .event-logo {
      max-width: 120px;
      max-height: 80px;
      margin: 0 auto 15px auto;
      display: block;
      border-radius: 8px;
      position: relative;
      z-index: 1;
    }

    .event-title {
      font-size: 1.8rem;
      font-weight: 700;
      margin-bottom: 8px;
      position: relative;
      z-index: 1;
    }

    .event-header {
      font-size: 1.1rem;
      font-weight: 400;
      opacity: 0.9;
      position: relative;
      z-index: 1;
    }

    .registration-content {
      padding: 40px 30px;
    }

    .registration-form {
      display: flex;
      flex-direction: column;
      gap: 20px;
    }

    .form-field {
      position: relative;
    }

    .form-field label {
      display: block;
      font-weight: 600;
      margin-bottom: 8px;
      color: #333;
      font-size: 0.95rem;
    }

    .form-field .required {
      color: #e74c3c;
      margin-left: 3px;
    }

    .form-field input,
    .form-field select {
      width: 100%;
      padding: 15px 16px;
      border: 2px solid #e1e8ed;
      border-radius: 12px;
      font-size: 1rem;
      background: #f8fafc;
      transition: all 0.3s ease;
      color: #333;
    }

    .form-field input:focus,
    .form-field select:focus {
      outline: none;
      border-color: #667eea;
      background: #ffffff;
      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
      transform: translateY(-2px);
    }

    .form-field input:hover,
    .form-field select:hover {
      border-color: #667eea;
      background: #ffffff;
    }

    .form-note {
      background: #f0f7ff;
      border-left: 4px solid #667eea;
      padding: 15px;
      border-radius: 8px;
      font-size: 0.9rem;
      color: #555;
      margin: 20px 0;
    }

    .submit-button {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      border: none;
      padding: 18px 0;
      border-radius: 12px;
      font-size: 1.1rem;
      font-weight: 700;
      letter-spacing: 0.5px;
      cursor: pointer;
      transition: all 0.3s ease;
      text-transform: uppercase;
      margin-top: 10px;
      position: relative;
      overflow: hidden;
    }

    .submit-button:hover {
      transform: translateY(-3px);
      box-shadow: 0 10px 30px rgba(102, 126, 234, 0.4);
    }

    .submit-button:active {
      transform: translateY(-1px);
    }

    .submit-button::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
      transition: left 0.5s;
    }

    .submit-button:hover::before {
      left: 100%;
    }

    .event-footer {
      text-align: center;
      margin-top: 30px;
      color: #666;
      font-size: 0.95rem;
      font-style: italic;
    }

    /* Loading state */
    .submit-button.loading {
      pointer-events: none;
      opacity: 0.7;
    }

    .submit-button.loading::after {
      content: '';
      position: absolute;
      width: 20px;
      height: 20px;
      border: 2px solid transparent;
      border-top: 2px solid white;
      border-radius: 50%;
      top: 50%;
      left: 50%;
      margin-left: -10px;
      margin-top: -10px;
      animation: spin 1s linear infinite;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    /* Responsive design */
    @media (max-width: 600px) {
      body {
        padding: 10px;
      }
      
      .page-container {
        border-radius: 16px;
      }
      
      .registration-header {
        padding: 25px 15px;
      }
      
      .event-title {
        font-size: 1.5rem;
      }
      
      .registration-content {
        padding: 30px 20px;
      }
      
      .form-field input,
      .form-field select {
        padding: 12px 14px;
      }
    }

    /* Success animation */
    .success-animation {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(76, 175, 80, 0.9);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 10000;
      opacity: 0;
      pointer-events: none;
      transition: opacity 0.3s ease;
    }

    .success-animation.show {
      opacity: 1;
      pointer-events: all;
    }

    .success-content {
      background: white;
      padding: 40px;
      border-radius: 20px;
      text-align: center;
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.2);
      transform: scale(0.8);
      transition: transform 0.3s ease;
    }

    .success-animation.show .success-content {
      transform: scale(1);
    }

    .checkmark {
      width: 80px;
      height: 80px;
      border-radius: 50%;
      background: #4caf50;
      margin: 0 auto 20px auto;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-size: 40px;
    }

    /* Custom background support */
    .custom-background {
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
      background-attachment: fixed;
    }

    .custom-background::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.4);
      z-index: -1;
    }
  </style>
</head>
<body {{#if customBackground}}class="custom-background" style="background-image: {{customBackground}}"{{/if}}>
  <div class="page-container">
    <!-- Header Section -->
    <div class="registration-header">
      {{#if event.logoUrl}}
        <img src="{{event.logoUrl}}" class="event-logo" alt="{{event.eventName}} Logo">
      {{/if}}
      <div class="event-title">{{event.eventName}}</div>
      <div class="event-header">{{eventHeader}}</div>
    </div>

    <!-- Registration Form Section -->
    <div class="registration-content">
      <form class="registration-form" action="/event/{{event._id}}/public-register" method="POST" id="registrationForm">
        
        {{#each fields}}
          <div class="form-field">
            {{formField this.fieldName this.fieldLabel this.fieldType this.fieldValue this.fieldMandatory ../badgeCategories this.dropdownOptions}}
          </div>
        {{/each}}

        {{#if formNote}}
          <div class="form-note">{{formNote}}</div>
        {{else}}
          <div class="form-note">Please provide the correct email address you would like to receive your confirmation email.</div>
        {{/if}}

        <button type="submit" class="submit-button" id="submitBtn">
          Register Now
        </button>
      </form>

      <div class="event-footer">
        {{#if eventFooter}}
          {{eventFooter}}
        {{else}}
          Thank you for registering for {{event.eventName}}!
        {{/if}}
      </div>
    </div>
  </div>

  <!-- Success Animation -->
  <div class="success-animation" id="successAnimation">
    <div class="success-content">
      <div class="checkmark">âœ“</div>
      <h2>Registration Successful!</h2>
      <p>Thank you for registering. You will receive a confirmation email shortly.</p>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('registrationForm');
      const submitBtn = document.getElementById('submitBtn');
      const successAnimation = document.getElementById('successAnimation');

      // Form submission handling
      form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        // Validate form
        const requiredFields = form.querySelectorAll('input[required], select[required]');
        let isValid = true;
        
        requiredFields.forEach(field => {
          if (!field.value.trim()) {
            isValid = false;
            field.style.borderColor = '#e74c3c';
            field.style.boxShadow = '0 0 0 3px rgba(231, 76, 60, 0.1)';
          } else {
            field.style.borderColor = '#e1e8ed';
            field.style.boxShadow = 'none';
          }
        });

        if (!isValid) {
          alert('Please fill in all required fields.');
          return;
        }

        // Show loading state
        submitBtn.classList.add('loading');
        submitBtn.textContent = 'Submitting...';

        // Create FormData
        const formData = new FormData(form);

        // Submit form
        fetch(form.action, {
          method: 'POST',
          body: formData
        })
        .then(response => {
          if (!response.ok) {
            throw new Error('Registration failed');
          }
          return response.json();
        })
        .then(data => {
          if (data.success) {
            // Show success animation
            successAnimation.classList.add('show');
            
            // Redirect after 3 seconds
            setTimeout(() => {
              if (data.redirectUrl) {
                window.location.href = data.redirectUrl;
              } else {
                successAnimation.classList.remove('show');
                form.reset();
                submitBtn.classList.remove('loading');
                submitBtn.textContent = 'Register Now';
              }
            }, 3000);
          } else {
            throw new Error(data.message || 'Registration failed');
          }
        })
        .catch(error => {
          console.error('Registration error:', error);
          alert('Registration failed. Please try again.');
          submitBtn.classList.remove('loading');
          submitBtn.textContent = 'Register Now';
        });
      });

      // Enhanced form field interactions
      const formFields = document.querySelectorAll('.form-field input, .form-field select');
      formFields.forEach(field => {
        field.addEventListener('focus', function() {
          this.parentElement.style.transform = 'translateY(-2px)';
        });

        field.addEventListener('blur', function() {
          this.parentElement.style.transform = 'translateY(0)';
        });

        field.addEventListener('input', function() {
          if (this.hasAttribute('required') && this.value.trim()) {
            this.style.borderColor = '#4caf50';
            this.style.boxShadow = '0 0 0 3px rgba(76, 175, 80, 0.1)';
          }
        });
      });
    });

    // Prevent double submission
    let isSubmitting = false;
    document.getElementById('registrationForm').addEventListener('submit', function() {
      if (isSubmitting) {
        return false;
      }
      isSubmitting = true;
      setTimeout(() => isSubmitting = false, 2000);
    });
  </script>
</body>
</html>
